name: Test

on:
  push:
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.markdownlint.json'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - 'commitlint.config.js'
      - 'LICENSE'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.markdownlint.json'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - 'commitlint.config.js'
      - 'LICENSE'

jobs:
  # [original source of job "prepare"](https://github.com/srz-zumix/ci-skip/blob/master/.github/workflows/main.yml#L15)
  prepare:
    runs-on: ubuntu-latest

    steps:
      - name: 'Print GITHUB_EVENT_PATH'
        run: cat ${GITHUB_EVENT_PATH}

      - name: Check [ci skip] or [skip ci]
        # skip commits with [ci skip] or [skip ci], except on an action triggered by push of a version tag
        if: "contains(github.event.head_commit.message, '[ci skip]') || contains(github.event.head_commit.message, '[skip ci]')"
        run: |
          # 78 is conventional "neutral exit code"
          exit 78
  test:
    needs: prepare
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Read .nvmrc
        id: nvmrc
        run: echo "::set-output name=nvmrc::$(cat .nvmrc)"

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvmrc.outputs.nvmrc }}

      - name: Get Yarn Cache
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --silent --frozen-lockfile
        env:
          CI: true

      - name: Run GraphQL Code Generator
        run: yarn gqlcodegen

      - name: Unit Test
        run: |
          yarn coverage:unit \
          --ci \
          --coverageDirectory ./reports/unit-coverage

      - name: Integration Test
        run: |
          yarn coverage:integration \
          --ci \
          --coverageDirectory ./reports/integration-coverage

      - name: Upload Unit Test Coverage To Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: reports/unit-coverage/*.json
          flags: unit

      - name: Upload Integration Test Coverage To Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: reports/integration-coverage/*.json
          flags: integration

      - name: Lint
        run: yarn eslint --ext ts --ext js .
